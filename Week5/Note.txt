Constraint layout - 크기가 다른 디바이스에 화면 맞추기 위하여 사용
또한 hard-coded layout을 지양하기 위하여 사용되었다.

Relative layout에서 오른쪽 클릭 후 Convert RelativeLayout to ConstraintLayout 누르고 OK 누르면 바꿀 수 있다.

RadioButton을 RadioGroup으로 감싸면서, 유저가 단 한개만을 선택할 수 있도록 한다.

layout_width를 constraintlayout에서 0dp로 설정한다는 의미는 주어진 constraint를 가득 가로로 채운다는것을 의미한다.

guideline을 선택하고 layout_constraint칸에서 얼마만큼 화면을 차지할지 설정할 수 있다.

랜드스케이프만을 위한 화면을 만들고 싶다면 Create Landscape Variation을 클릭하여 만들 수 있다.

Menu를 만들 때 Resource Type을 Menu로 설정하고 만들면 새로운 폴더와 파일이 함께 생성된다.

Intent intent = new Intent(현재화면.this, 넘어갈화면.class);
startActivity(intent); -- 는 화면이동에 있어 도움을 준다
Activity를 새로 추가하기 위해서는 java 하위폴더에서 오른쪽 클릭 -> New -> Activity -> Empty Activity
그러면 자동으로 AndroidManifest.xml에 선언되며 activity를 이용가능하다.

Explicit intents는 같은 앱에서 화면 전환을 이루도록 한다.
Implicit intents는 앱 밖으로 이동하기 때문에 component이름을 명시하지 않는다.

putExtra는 intent로 데이터를 넘길 때 사용
ex) intent.putExtra("myInt", 44);

Parcelables는 message container로써 Java object를 serialize하는데 좋은 방법이다.

Constructor를 만드려면 android studio 상단의 Code에서 generate를 누르고 Constructor를 누른 뒤 초기화 할 멤버들을 선택하면 된다.

Parcelable object만드려면, implements를 통하여 Parcelable을 얻는다.
두번째로 빨간 줄에서 Implement methods 를 실행한다.
세번째로 Add Parcelable Implementation을 통하여 creater함수를 만든다.

 